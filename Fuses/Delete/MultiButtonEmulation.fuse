--- Simulate a toggle type multibutton
--


-- ----------------------------------------------------------------------------------------------------------------------------------------
-- Register the tool on Fusion start up
--

FuRegisterClass("MultiButtonEmulationFuse_by_nmbr73", CT_SourceTool, {
    REGS_Name = "ex.MultiButtonEmulation",
	  REGS_Category = "Fuses/Kernfusion/Examples",
    REGS_OpDescription = "Since the MultiButtonControl does not work anymore, this one tries to mimic its behaviour.",
	  REGS_OpIconString = "case study",
    REG_Source_GlobalCtrls = true,
    REG_Source_SizeCtrls = true,
    REG_Source_AspectCtrls = true,
    REG_Source_DepthCtrls = true,
	  REG_TimeVariant = false,
	  REGS_Company = "nmbr73",
	  REGS_URL = "https://nmbr73.github.io/",
	  REG_Version	= 000001,
    REG_Fuse_NoEdit = false,
    REG_Fuse_NoReload = false,
    })



-------------------------------------------------------------------------------------------------------------------------------------------
-- Callback to initialize the tool.
--
function Create()

  self:AddInput("What this is about...", "info", {
    IC_ControlPage = -1,
    LINKID_DataType = "Text",
    INPID_InputControl = "ButtonControl",
    INP_DoNotifyChanged = false,
    INP_External = false,
    BTNCS_Execute = 'bmd.openurl("https://nmbr73.github.io/Kernfusion/Fuses/Examples/MultiButtonEmulation.html")',
  })




  -- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>




  -- Okay, now following a very cumbersome workaround to mimic a multi button.
  -- One may consider to encapsulate this functionality into some more convenient
  -- methods, or at least parametrize the number of buttons in the control.
  -- But honestly: What for? Hope is that BMD will just bring us back the
  -- MultiButtonCOntrol!!?

  MultiButtonEmulationButton = {}

  btns={ "Oin", "Dori", "Balin"}
  strs={}

  for i, v in ipairs(btns) do

    MultiButtonEmulationButton[i-1] = self:AddInput("Multibutton", "btn"..i, {
      LINKID_DataType = "Number",
      INPID_InputControl = "MultiButtonControl",
      INP_DoNotifyChanged = true,
      INP_Default = 0,
      IC_ControlGroup = 42,
      IC_ControlID = i-1,
      MBTNC_Type = 'Toggle',
      MBTNC_ShowName = true,
      { MBTNC_AddButton = v, MBTNCD_ButtonWidth = 0.33, },
    })

    table.insert(strs,{ CCS_AddString = v, })

  end

  MultiButtonEmulationCombo = self:AddInput( "Hidden", "btncombo", {
    LINKID_DataType = "Number",
    INPID_InputControl = "ComboControl",
    INP_DoNotifyChanged = false,
    INP_Default = 0,
    INP_Integer = true,
    strs,
    IC_Visible      = false,
  })


  -- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



  OutImage   = self:AddOutput( "Output", "Output", {
    LINKID_DataType = "Image",
    LINK_Main = 1
  })


  self:AddControlPage("Image")

  InGlobalIn  = self:AddInput("Global In",  "GlobalIn",  { LINKID_DataType = "Number", })
  InGlobalOut = self:AddInput("Global Out", "GlobalOut", { LINKID_DataType = "Number", })

end




-------------------------------------------------------------------------------------------------------------------------------------------
-- Callback to render the node.
--
function Process(req)

  OutImage:Set(req,nil)

end



-------------------------------------------------------------------------------------------------------------------------------------------
-- Callback to handle UI control events.
--

function NotifyChanged(inp, param, time)

  if inp == nil or param == nil then
    return
  end

  -- simulation of a toogle type multibutton
  -- if a button get's activated, then we
  -- deactivate the currently active one

  for i = 0,3 do
    if inp == MultiButtonEmulationButton[i] then

      -- it's one of our buttons

      status  = MultiButtonEmulationButton[i]:GetSource(0).Value
      current = MultiButtonEmulationCombo:GetSource(0).Value

      if status == 1 and current ~= i then
        MultiButtonEmulationCombo:SetSource(Number(i),0)
        MultiButtonEmulationButton[current]:SetSource(Number(0),0)
      elseif current == i and status == 0 then
        MultiButtonEmulationButton[i]:SetSource(Number(1),0)
      end

      return

    end
  end
end
