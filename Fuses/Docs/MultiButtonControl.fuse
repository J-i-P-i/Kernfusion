--- Example of the MultiButonControl not working (most probably)
--


-- ----------------------------------------------------------------------------------------------------------------------------------------
-- Register the tool on Fusion start up
--

FuRegisterClass("MultiButtonControlExampleFuse_by_nmbr73", CT_SourceTool, {
    REGS_Name = "ex.MultiButtonControl",
	  REGS_Category = "Fuses/Kernfusion/Examples",
    REGS_OpDescription = "MultiButtonControl not working as expected.",
	  REGS_OpIconString = "case study",
    REG_Source_GlobalCtrls = true,
    REG_Source_SizeCtrls = true,
    REG_Source_AspectCtrls = true,
    REG_Source_DepthCtrls = true,
	  REG_TimeVariant = false,
	  REGS_Company = "nmbr73",
	  REGS_URL = "https://nmbr73.github.io/",
	  REG_Version	= 000001,
    REG_Fuse_NoEdit = false,
    REG_Fuse_NoReload = false,
    })



-------------------------------------------------------------------------------------------------------------------------------------------
-- Callback to initialize the tool.
--
function Create()

  self:AddInput("What this is about...", "info", {
    IC_ControlPage = -1,
    LINKID_DataType = "Text",
    INPID_InputControl = "ButtonControl",
    INP_DoNotifyChanged = false,
    INP_External = false,
    BTNCS_Execute = 'bmd.openurl("https://nmbr73.github.io/Kernfusion/Fuses/Examples/MultiButtonControl.html")',
  })




  -- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



  InMultiButton1 = self:AddInput("Multibutton 1", "mbtn1", {
    LINKID_DataType = "Number",
    INPID_InputControl = "MultiButtonControl",
    --MBTNC_Type = "Normal", -- Normal|Toggle|TriState, whereby TriState never has been implemented -- "Normal" darf nicht angew√§hlt werden, sonst geht's schief - warum auch immer
    MBTNC_ForceButtons = true,  -- hiermit werden wieder Buttons dargestellt
    MBTNC_StretchToFit = true,
    INP_Default = 1,
    { MBTNC_AddButton = "Oin",  },
    { MBTNC_AddButton = "Dori", },
    { MBTNC_AddButton = "Balin",  },
  })


  -- Always the same result - no matter what "MBTNC_Type" we use

  InMultiButton1 = self:AddInput("Multibutton 1", "btnA", {
    LINKID_DataType = "Number",
    INPID_InputControl = "MultiButtonControl",
    MBTNC_Type = "Normal",
    MBTNC_ForceButtons = true,
    MBTNC_StretchToFit = true,
    INP_Default = 1,
    { MBTNC_AddButton = "Bombur",  },
    { MBTNC_AddButton = "Dwalin", },
    { MBTNC_AddButton = "Bifur",  },
  })



  -- Works the same if we put the tables into a separate table

  InMultiButton2 = self:AddInput("Multibutton 2", "btnB", {
		LINKID_DataType = "Number",
		INPID_InputControl = "MultiButtonControl",
		INP_Default = 1,
    MBTNC_ForceButtons = true,

    -- IC_ControlGroup = 42,


    MBTNC_Type = "Toggle",
    { MBTNC_AddButton = "Balin",  MBTNCD_ButtonWidth = 0.33 }, -- IC_ControlID = 0,
    { MBTNC_AddButton = "Kili",   MBTNCD_ButtonWidth = 0.33 },
    { MBTNC_AddButton = "Nori",   MBTNCD_ButtonWidth = 0.33 },
	})



  -- And even this is possible - but TriStae behaves exactly like

  InMultiButton3 = self:AddInput("Multibutton 3", "btnC", {
		LINKID_DataType = "Number",
		INPID_InputControl = "MultiButtonControl",
		INP_Default = 0.0,
    MBTNC_Type = "Toggle",
    MBTNC_ForceButtons = true,
    MBTNC_StretchToFit = true,
    MBTNC_AddButton = "Bofur",
  })

  InMultiButton3:SetAttrs({ MBTNC_AddButton = "Fili" })
  InMultiButton3:SetAttrs({ MBTNC_AddButton = "Gloin" })



  InMultiButton4 = self:AddInput("Multibutton 4", "btnD", {
    LINKID_DataType = "Number",
    INPID_InputControl = "MultiButtonControl",
    MBTNC_Type = "Toggle",
    MBTNC_ForceButtons = true,
    MBTNC_StretchToFit = true,
    INP_Default = 0,
    { MBTNC_AddButton = "Oin",  },
    { MBTNC_AddButton = "Dori", },
    { MBTNC_AddButton = "Balin",  },
  })








  -- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



  OutImage   = self:AddOutput( "Output", "Output", {
    LINKID_DataType = "Image",
    LINK_Main = 1
  })


  self:AddControlPage("Image")

  InGlobalIn  = self:AddInput("Global In",  "GlobalIn",  { LINKID_DataType = "Number", })
  InGlobalOut = self:AddInput("Global Out", "GlobalOut", { LINKID_DataType = "Number", })

end




-------------------------------------------------------------------------------------------------------------------------------------------
-- Callback to render the node.
--
function Process(req)

  OutImage:Set(req,nil)

end



-------------------------------------------------------------------------------------------------------------------------------------------
-- Callback to handle UI control events.
--

function NotifyChanged(inp, param, time)

  if inp == nil or param == nil then
    return
  end
end


-- function NotifyChanged(inp, param, time)

--   if inp == nil or param == nil then
--     return
--   end

--   -- simulation of a toogle type multibutton
--   -- if a button get's activated, then we
--   -- deactivate the currently active one

--   for i = 0,3 do
--     if inp == MultiButtonEmulationButton[i] then

--       -- it's one of our buttons

--       status  = MultiButtonEmulationButton[i]:GetSource(0).Value
--       current = MultiButtonEmulationCombo:GetSource(0).Value

--       if status == 1 and current ~= i then
--         MultiButtonEmulationCombo:SetSource(Number(i),0)
--         MultiButtonEmulationButton[current]:SetSource(Number(0),0)
--       elseif current == i and status == 0 then
--         MultiButtonEmulationButton[i]:SetSource(Number(1),0)
--       end

--       return

--     end
--   end
-- end
